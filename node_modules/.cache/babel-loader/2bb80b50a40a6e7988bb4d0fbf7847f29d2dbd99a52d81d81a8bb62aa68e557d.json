{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchItems, addItem, updateItem, deleteItem } from './cartApi';\nimport { fetchAsync } from '../products/productsSlice';\nconst initialState = {\n  items: [],\n  status: 'idle'\n};\nexport const addAsync = createAsyncThunk('cart/addItem', async item => {\n  const {\n    price,\n    id,\n    title,\n    brand\n  } = item;\n  const response = await addItem(item);\n  return response.data;\n});\nexport const cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.items = action.payload;\n    }).addCase(addAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.items.push(action.payload);\n    });\n  }\n});\n\n// export const { } = cartSlice.actions;\n\nexport default cartSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","fetchItems","addItem","updateItem","deleteItem","fetchAsync","initialState","items","status","addAsync","item","price","id","title","brand","response","data","cartSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","push","reducer"],"sources":["D:/9.Redux Online/React ToolKit Project/react-toolkit-project/src/features/cart/cartSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { fetchItems,addItem,updateItem,deleteItem } from './cartApi';\r\nimport { fetchAsync } from '../products/productsSlice';\r\n\r\nconst initialState = {\r\n  items: [],\r\n  status: 'idle',\r\n};\r\n\r\nexport const addAsync = createAsyncThunk(\r\n  'cart/addItem',\r\n  async (item) => {\r\n    const {price,id,title,brand}=item\r\n    const response = await addItem(item);\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const cartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchAsync.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchAsync.fulfilled, (state, action) => {\r\n        state.status = 'idle';\r\n        state.items = action.payload;\r\n      })\r\n      .addCase(addAsync.fulfilled, (state, action) => {\r\n        state.status = 'idle';\r\n        state.items.push(action.payload)\r\n      });\r\n  },\r\n});\r\n\r\n// export const { } = cartSlice.actions;\r\n\r\nexport default cartSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,SAASC,UAAU,EAACC,OAAO,EAACC,UAAU,EAACC,UAAU,QAAQ,WAAW;AACpE,SAASC,UAAU,QAAQ,2BAA2B;AAEtD,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAE;AACV,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAGV,gBAAgB,CACtC,cAAc,EACd,MAAOW,IAAI,IAAK;EACd,MAAM;IAACC,KAAK;IAACC,EAAE;IAACC,KAAK;IAACC;EAAK,CAAC,GAACJ,IAAI;EACjC,MAAMK,QAAQ,GAAG,MAAMb,OAAO,CAACQ,IAAI,CAAC;EACpC,OAAOK,QAAQ,CAACC,IAAI;AACtB,CACF,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGjB,WAAW,CAAC;EACnCkB,IAAI,EAAE,MAAM;EACZZ,YAAY;EACZa,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACjB,UAAU,CAACkB,OAAO,EAAGC,KAAK,IAAK;MACtCA,KAAK,CAAChB,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDc,OAAO,CAACjB,UAAU,CAACoB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAChDF,KAAK,CAAChB,MAAM,GAAG,MAAM;MACrBgB,KAAK,CAACjB,KAAK,GAAGmB,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC,CACDL,OAAO,CAACb,QAAQ,CAACgB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC9CF,KAAK,CAAChB,MAAM,GAAG,MAAM;MACrBgB,KAAK,CAACjB,KAAK,CAACqB,IAAI,CAACF,MAAM,CAACC,OAAO,CAAC;IAClC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;;AAEF;;AAEA,eAAeV,SAAS,CAACY,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}