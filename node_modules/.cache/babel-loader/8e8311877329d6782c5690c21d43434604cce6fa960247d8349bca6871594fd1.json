{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchItems, addItem, updateItem, deleteItem } from './cartApi';\nconst initialState = {\n  items: [],\n  status: 'idle'\n};\nexport const addAsync = createAsyncThunk('cart/addItems', async item => {\n  const response = await fetchcart(item);\n  return response.data;\n});\nexport const cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.items = action.payload;\n    });\n    addCase(addAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.items.push(action.payload);\n    });\n  }\n});\n\n// export const { } = cartSlice.actions;\n\nexport default cartSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","fetchItems","addItem","updateItem","deleteItem","initialState","items","status","addAsync","item","response","fetchcart","data","cartSlice","name","reducers","extraReducers","builder","addCase","fetchAsync","pending","state","fulfilled","action","payload","push","reducer"],"sources":["D:/9.Redux Online/React ToolKit Project/react-toolkit-project/src/features/cart/cartSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { fetchItems,addItem,updateItem,deleteItem } from './cartApi';\r\n\r\nconst initialState = {\r\n  items: [],\r\n  status: 'idle',\r\n};\r\n\r\nexport const addAsync = createAsyncThunk(\r\n  'cart/addItems',\r\n  async (item) => {\r\n    const response = await fetchcart(item);\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const cartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchAsync.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchAsync.fulfilled, (state, action) => {\r\n        state.status = 'idle';\r\n        state.items = action.payload;\r\n      });\r\n      addCase(addAsync.fulfilled, (state, action) => {\r\n        state.status = 'idle';\r\n        state.items.push(action.payload)\r\n      });\r\n  },\r\n});\r\n\r\n// export const { } = cartSlice.actions;\r\n\r\nexport default cartSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,SAASC,UAAU,EAACC,OAAO,EAACC,UAAU,EAACC,UAAU,QAAQ,WAAW;AAEpE,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAE;AACV,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAGT,gBAAgB,CACtC,eAAe,EACf,MAAOU,IAAI,IAAK;EACd,MAAMC,QAAQ,GAAG,MAAMC,SAAS,CAACF,IAAI,CAAC;EACtC,OAAOC,QAAQ,CAACE,IAAI;AACtB,CACF,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGb,WAAW,CAAC;EACnCc,IAAI,EAAE,MAAM;EACZT,YAAY;EACZU,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACC,UAAU,CAACC,OAAO,EAAGC,KAAK,IAAK;MACtCA,KAAK,CAACd,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDW,OAAO,CAACC,UAAU,CAACG,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAChDF,KAAK,CAACd,MAAM,GAAG,MAAM;MACrBc,KAAK,CAACf,KAAK,GAAGiB,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC;IACFN,OAAO,CAACV,QAAQ,CAACc,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC7CF,KAAK,CAACd,MAAM,GAAG,MAAM;MACrBc,KAAK,CAACf,KAAK,CAACmB,IAAI,CAACF,MAAM,CAACC,OAAO,CAAC;IAClC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;;AAEF;;AAEA,eAAeX,SAAS,CAACa,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}